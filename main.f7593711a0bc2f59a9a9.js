(()=>{"use strict";var t={d:(s,e)=>{for(var a in e)t.o(e,a)&&!t.o(s,a)&&Object.defineProperty(s,a,{enumerable:!0,get:e[a]})},o:(t,s)=>Object.prototype.hasOwnProperty.call(t,s)};function s(t,s){s.innerHTML="";for(let e=0;e<t.board.length;e++)for(let a=0;a<t.board[e].length;a++){const i=document.createElement("div");i.classList.add("cell"),i.dataset.x=a,i.dataset.y=e;const r=t.board[e][a];"miss"===r?i.classList.add("miss"):"hit"===r?i.classList.add("hit"):"object"==typeof r&&null!==r&&i.classList.add("ship"),s.appendChild(i)}}t.d({},{ai:()=>i,F9:()=>e});class e{constructor(t){this.length=t,this.numHit=0}hit(){this.numHit++}isSunk(){return this.numHit>=this.length}}class a{constructor(){this.board=this.createBoard(),this.ships=[],this.originalShipPlacement=[]}createBoard(){const t=[];for(let s=0;s<10;s++)t.push(new Array(10).fill(null));return t}placeShip(t,s,e,a=!0){if(a&&t.length+s>10)return!1;if(!a&&t.length+e>10)return!1;for(let i=0;i<t.length;i++)if(a){if(null!==this.board[e][s+i])return!1}else if(null!==this.board[e+i][s])return!1;for(let i=0;i<t.length;i++)a?this.board[e][s+i]=t:this.board[e+i][s]=t;return this.ships.push(t),this.originalShipPlacement.push({ship:t,x:s,y:e,isHorizontal:a}),!0}reset(){this.ships.forEach(t=>{t.numHit=0}),this.board=this.createBoard(),this.originalShipPlacement.forEach(({ship:t,x:s,y:e,isHorizontal:a})=>{for(let i=0;i<t.length;i++)a?this.board[e][s+i]=t:this.board[e+i][s]=t})}receiveAttack(t,s){const e=this.board[s][t];return null===e?(this.board[s][t]="miss",!1):"object"==typeof e&&(e.hit(),this.board[s][t]="hit",e)}allShipsSunk(){return this.ships.every(t=>t.isSunk())}}class i{constructor(t){this.typePlayer=t,this.gameboard=new a,"Computer"===this.typePlayer&&(this.isHunting=!0,this.targetQueue=[])}getValidAdjacentSquares(t,s,e){const a=[];return s>0&&a.push([t,s-1]),s<9&&a.push([t,s+1]),t>0&&a.push([t-1,s]),t<9&&a.push([t+1,s]),a.filter(([t,s])=>{const a=e.board[s][t];return"miss"!==a&&"hit"!==a})}attack(t,s,e){return t.receiveAttack(s,e)}takeTurnComputer(t){if(this.isHunting){let s,e;do{s=Math.floor(10*Math.random()),e=Math.floor(10*Math.random())}while("miss"===t.board[e][s]||"hit"===t.board[e][s]);this.attack(t,s,e)&&(this.isHunting=!1,this.targetQueue=this.getValidAdjacentSquares(s,e,t))}else{if(0===this.targetQueue.length)return this.isHunting=!0,void this.takeTurnComputer(t);const[s,e]=this.targetQueue.shift(),a=this.attack(t,s,e);a&&a.isSunk()&&(this.isHunting=!0,this.targetQueue=[])}}}new class{constructor(){this.computerBoard=document.querySelector("#computer-board"),this.playerBoard=document.querySelector("#player-board"),this.playButton=document.querySelector("#play-button"),this.restartButton=document.querySelector("#restart-button"),this.swapBoardButton=document.querySelector("#swap-button"),this.displayMessage=document.querySelector(".display-message"),this.swapBoardButton.addEventListener("click",()=>{this.setupGame()}),this.playButton.addEventListener("click",()=>{this.displayMessage.classList.contains("winner")&&this.displayMessage.classList.remove("winner"),this.displayMessage.classList.contains("loser")&&this.displayMessage.classList.remove("loser"),this.displayMessage.textContent="Select a coordinate on the enemy grid to fire",this.playButton.classList.add("hide"),this.restartButton.classList.remove("hide"),this.swapBoardButton.classList.remove("hide"),this.computerBoard.classList.remove("hide"),this.playerBoard.classList.remove("hide"),this.setupGame()}),this.restartButton.addEventListener("click",()=>{this.swapBoardButton.classList.remove("hide"),this.player.gameboard.reset(),this.computer.gameboard.reset(),s(this.player.gameboard,this.playerBoard),s(this.computer.gameboard,this.computerBoard)}),this.computerBoard.addEventListener("click",t=>{if(!t.target.classList.contains("cell"))return;const s=parseInt(t.target.dataset.x),e=parseInt(t.target.dataset.y);this.runGame(s,e)})}setupGame(){this.player=new i("Human"),this.computer=new i("Computer");const t=[5,4,3,2,1];this.setShipsRandomly(this.player,t),this.setShipsRandomly(this.computer,t),s(this.player.gameboard,this.playerBoard),s(this.computer.gameboard,this.computerBoard)}setShipsRandomly(t,s){s.forEach(s=>{let a=!1;for(;!a;){const i=Math.floor(10*Math.random()),r=Math.floor(10*Math.random()),o=Math.random()<.5,h=new e(s);a=t.gameboard.placeShip(h,i,r,o)}})}runGame(t,e){if(!isNaN(t)&&!isNaN(e)){if(this.swapBoardButton.classList.add("hide"),this.player.attack(this.computer.gameboard,t,e),s(this.computer.gameboard,this.computerBoard),this.computer.gameboard.allShipsSunk())return this.displayMessage.textContent="You Win!",this.displayMessage.classList.add("winner"),this.computerBoard.classList.add("hide"),this.playerBoard.classList.add("hide"),this.restartButton.classList.add("hide"),this.playButton.classList.remove("hide"),void(this.playButton.innerHTML="Play Again");setTimeout(()=>{if(this.computer.takeTurnComputer(this.player.gameboard),s(this.player.gameboard,this.playerBoard),this.player.gameboard.allShipsSunk())return this.displayMessage.textContent="You Lose!",this.displayMessage.classList.add("loser"),this.computerBoard.classList.add("hide"),this.playerBoard.classList.add("hide"),this.restartButton.classList.add("hide"),this.playButton.classList.remove("hide"),void(this.playButton.innerHTML="Play Again")},500)}}}})();
//# sourceMappingURL=main.f7593711a0bc2f59a9a9.js.map